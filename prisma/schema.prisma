generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  balance      Float          @default(0)
  uid          String         @unique
  expenses     Expense[]
  ExpenseSplit ExpenseSplit[]
  groups       GroupUser[]
}

model Group {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  isDeleted   Boolean     @default(false)
  expenses    Expense[]
  members     GroupUser[]
}

model GroupUser {
  id      Int    @id @default(autoincrement())
  groupId Int
  balance Float  @default(0)
  uid     String
  group   Group  @relation(fields: [groupId], references: [id])
  user    User   @relation(fields: [uid], references: [uid])

  @@unique([uid, groupId])
}

model Expense {
  id           Int            @id @default(autoincrement())
  description  String
  amount       Float
  payerId      String
  groupId      Int?
  status       String         @default("pending")
  createdAt    DateTime       @default(now())
  deletedAt    DateTime?
  group        Group?         @relation(fields: [groupId], references: [id])
  payer        User           @relation(fields: [payerId], references: [uid])
  ExpenseSplit ExpenseSplit[]

  @@index([groupId])
}

model ExpenseSplit {
  id        Int     @id @default(autoincrement())
  expenseId Int
  share     Float
  uid       String
  expense   Expense @relation(fields: [expenseId], references: [id])
  user      User    @relation(fields: [uid], references: [uid])
}
